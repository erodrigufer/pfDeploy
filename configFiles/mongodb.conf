# pf.conf file for servers running MongoDB instances.
# 
# Reference material:
# * Absolute OpenBSD (book)
# * Absolute FreeBSD (book)
# * https://www.digitalocean.com/community/tutorials/how-to-configure-packet-filter-pf-on-freebsd-12-1

# Name of main gateway. ext_if stands for external interface.
ext_if="vtnet0"
mongodb_port=27017

# Non-routable addresses, as described in RFC6890 (used sometimes 
# in DDoS attacks). Block all traffic in and out of external interface using
# these addresses.
table <rfc6890> const { 0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16          \
                  172.16.0.0/12 192.0.0.0/24 192.0.0.0/29 192.0.2.0/24 192.88.99.0/24    \
                  192.168.0.0/16 198.18.0.0/15 198.51.100.0/24 203.0.113.0/24            \
                  240.0.0.0/4 255.255.255.255/32 }

# <bruteforce> table with hosts trying to break into the server with 
# brute-force attacks. The 'persistent' keyword creates the table even if it 
# does not have any IPs at the beginning, otherwise PF does not work with 
# empty tables.
table <bruteforce_ssh> persist counters
# table <bruteforce_mongo> persist

# Silently drop rejected packets to not give away any information to clients.
set block-policy drop
# Collect statistics (they can be viewed with pfctl -si) from egress group,
# in this case it defaults to the primary interface $ext_if.
set loginterface egress
# Do not filter on localhost (lo0).
set skip on lo0
# Reassemble of packet fragments coming in network interface.
scrub in
# Anti-spoofing: protect against IP spoofing, log any incidents.
# Check definition of egress interface:
# 'The egress group contains the interface(s) that holds the default route(s).'
# Taken from: https://www.openbsd.org/faq/pf/filter.html
antispoof log quick for egress 
# Default deny policy in incoming data.
block in
# Default allow policy for outbound data.
pass out

# Block all traffic comming or trying to get out from un-routable addresses.
block in quick on egress from <rfc6890> to any
block out quick on egress from any to <rfc6890> 

# ------------------------------------------------------------------------------
# Specific pass in rules 
# TCP         
# ------------------------------------------------------------------------------
# Permit TCP traffic from any client for SSH (22), DNS (53), NTP (123), but 
# block clients trying to brute-force their way in with SSH.
pass in log on $ext_if proto tcp from any to ($ext_if) port { 53, 123 }

# Block any clients in the <bruteforce_ssh> table trying to connect to any port. 
block in log (all) quick on $ext_if proto tcp from <bruteforce_ssh> to ($ext_if) port { 22, 53, $mongodb_port }
pass in log on $ext_if proto tcp to port { 22 } \
    keep state (max-src-conn 6, max-src-conn-rate 3/1, \
        overload <bruteforce_ssh> flush global)
# Permit TCP traffic from any client for MongoDB instance. Required to accept
# connections from MongoDB Compass clients.
# * max-src-conn: number of simultaneous connections allowed from a single host 
# per second.
# * max-src-conn-rate: number of new connections allowed from a single host 
# per second.
# If any client exceeds the connection's limits, the 'overload' mechanism will
# add the client's IP to the 'persistent' table <bruteforce>, and flush their
# connection, in other words, close any active conn. that they might have.
#pass in log (all) on $ext_if proto tcp from any to ($ext_if) port $mongodb_port \
#	keep state (max-src-conn 12, max-src-conn-rate 15/1, \
#        overload <bruteforce_mongo> flush global)
pass in log on $ext_if proto tcp from any to ($ext_if) port $mongodb_port
# ------------------------------------------------------------------------------
# UDP         
# ------------------------------------------------------------------------------
# Permit UDP traffic for DNS.
pass in on $ext_if proto udp to ($ext_if) port domain
# ------------------------------------------------------------------------------
# ICMP         
# ------------------------------------------------------------------------------
# Permit ICMP traffic necessary for proper internet functioning (taken from 
# Absolute FreeBSD chapter on pf).
pass in on $ext_if inet proto icmp to ($ext_if) icmp-type { unreach, redir, timex, echoreq }
